3DGS Forward(Rendering) & Backward (Training) with 1 image Pipeling
1. Rendering
train.py
        render_pkg = render(viewpoint_cam, gaussians, pipe, bg, use_trained_exp=dataset.train_test_exp, separate_sh=SPARSE_ADAM_AVAILABLE)
	└==> gaussian_renderer (gaussian-splatting/gaussian_renderer/__init__.py)
	      ├──> rasterizer = GaussianRasterizer(raster_settings=raster_settings) 
	      └──> rendered_image, radii, depth_image = rasterizer(...)
		    └==> diff_gaussian_rasterization (gaussian-splatting/submodules/diff-gaussian-rasterization/diff_gaussian_rasterization/__init__.py)
			  └──> GaussianRasterizer.forward(...)
                                └──> rasterize_gaussians(...)
                                                                            └──> _RasterizeGaussians.apply(...)
                                            └──> _RasterizeGaussians.forward(...)
						  └──> num_rendered, color, radii, geomBuffer, binningBuffer, imgBuffer, invdepths = _C.rasterize_gaussians(*args)
gaussian-splatting/submodules/diff-gaussian-rasterization/rasterize_points.cu
			
	
        image, viewspace_point_tensor, visibility_filter, radii = render_pkg["render"], render_pkg["viewspace_points"], render_pkg["visibility_filter"], render_pkg["radii"]